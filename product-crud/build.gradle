buildscript {
	repositories {
		mavenCentral()
		maven { url 'https://repo.spring.io/milestone' }
		maven { url 'https://repo.spring.io/snapshot' }
	}
	dependencies {
		classpath 'org.springframework.cloud:spring-cloud-contract-gradle-plugin:3.0.0'
	}
}
plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

//apply plugin: 'groovy'
apply plugin: 'spring-cloud-contract'

group = 'com.cognizant'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext {
	set('springCloudVersion', "2020.0.1-SNAPSHOT")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
	testCompile 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
	testCompile 'junit:junit:4.12'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

contracts {
	testFramework = org.springframework.cloud.contract.verifier.config.TestFramework.JUNIT
}

contractTest {
	useJUnitPlatform()
}
test {
	useJUnitPlatform()
}

task buildZip(type: Zip){
	from compileJava
	from processResources
	into ('lib'){
		from configurations.runtimeClasspath
	}
}